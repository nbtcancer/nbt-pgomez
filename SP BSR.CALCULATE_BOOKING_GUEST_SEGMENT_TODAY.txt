USE [DW]
GO
/****** Object:  StoredProcedure [BSR].[CALCULATE_BOOKING_GUEST_SEGMENT_TODAY]    Script Date: 2/8/2022 11:43:54 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--*****************************************************************************************************************************************************
-- Author: P.Gomez, PhD
-- This stored procedure extracts data from reservation system SEAWARE and builds 
-- data warehouse tables.
--*****************************************************************************************************************************************************
ALTER PROCEDURE [BSR].[CALCULATE_BOOKING_GUEST_SEGMENT_TODAY] AS 

TRUNCATE TABLE BSR.BOOKING_GUEST_SEGMENT_TODAY;

DECLARE @YESTERDAY DATE;
SET @YESTERDAY = DATEADD(DD,-1, GETDATE());

INSERT INTO BSR.BOOKING_GUEST_SEGMENT_TODAY
   (DATETIME_STAMP, RES_ID, GUEST_ID, PACKAGE_ID, GUEST_SEQN, GUEST_TYPE, CLIENT_TYPE,
   CL.CLIENT_ID, CL.HOUSEHOLD_ID, PACKAGE_CODE, PACKAGE_CLASS, PACKAGE_TYPE, PACKAGE_NAME, ROUTE_CODE, 
   SHIP_CODE, BRAND, CABIN_CATEGORY, [START_DATE], END_DATE, EFFECTIVE_DATE,   
   RES_STATUS, RES_INIT_DATE,  CURRENCY_CODE, CURRENCY_RATE, RES_GUEST_COUNT, GROUP_ID, TYPE_FIT_GROUP,
   AGENCY_ID,SEC_AGENCY_ID, AGENCY_NAME, AGENCY_TYPE, SALES_REGION, SALES_DISTRICT, AGENCY_CLASSIFICATION_CODE, AGENCY_CLASSIFICATION_NAME, 
   AGENCY_CLASS_TYPE, AGENCY_PHONE, AGENCY_EMAIL, AGENCY_COUNTRY_NAME,
   AGENT_ID, SEC_AGENT_ID, AGENT_NAME, AGENT_EMAIL, AGENT_PHONE, 
   CABIN_CATEGORY_BERTH, DEP_REF_ID, ARR_REF_ID, SAIL_ID, AirReady, GEOG_AREA_CODE, PORT_FROM, PORT_TO,
   FIRST_NAME, LAST_NAME, BIRTHDAY, COUNTRY_OF_BIRTH, CITIZENSHIP, SEX,  AGE, AGE_AT_SAILING, GUEST_EMAIL, SOURCE_CODE, CS_STATUS
   )
SELECT 
   DISTINCT GETDATE() DATETIME_STAMP, RP.RES_ID, RP.GUEST_ID, RP.PACKAGE_ID, RG.GUEST_SEQN, RG.GUEST_TYPE, CL.CLIENT_TYPE,
   CL.CLIENT_ID, CL.HOUSEHOLD_ID, PD.PACKAGE_CODE, PACKAGE_CLASS, RP.PACKAGE_TYPE, PD.PACKAGE_NAME,   PD.ROUTE_CODE,
   RP.SHIP_CODE, BR.BRAND_CODE, RP.CABIN_CATEGORY, RP.START_DATE, END_DATE, EFFECTIVE_DATE,   
   RH.RES_STATUS, RH.RES_INIT_DATE, RH.CURRENCY_CODE, RH.CURRENCY_RATE, RH.RES_GUEST_COUNT, RH.GROUP_ID, CASE WHEN RH.GROUP_ID IS NULL THEN 'FIT' ELSE 'GROUP' END,
   RH.AGENCY_ID,RH.SEC_AGENCY_ID, AG.AGENCY_NAME, AG.AGENCY_TYPE, AG.SALES_REGION, AG.SALES_DISTRICT, 
   --AG.AGENCY_CLASSIFICATION_CODE, 
   DBO.GET_AGENCY_CLASSIFICATION_CODE(RH.SEC_AGENCY_ID, RH.RES_INIT_DATE),
   AG.AGENCY_CLASSIFICATION_NAME, 
   AG.AGENCY_CLASS_TYPE,  AG.PHONE_NUMBER, AG.EMAIL, CO.COUNTRY_NAME,
   RH.AGENT_ID, RH.SEC_AGENT_ID, AGT.FULL_NAME, AGT.EMAIL,
   CASE WHEN AGT.PHONE_OFFICE IS NOT NULL THEN AGT.PHONE_OFFICE ELSE CASE WHEN AGT.PHONE_CELLULAR IS NOT NULL THEN AGT.PHONE_CELLULAR ELSE AGT.PHONE_HOME END END, 
   CABIN_CATEGORY_BERTH, RP.DEP_REF_ID, RP.ARR_REF_ID, PD.SAIL_ID, PD.AirReady, PD.GEOG_AREA_CODE, SH.PORT_FROM, SH.PORT_TO,
   CL.FIRST_NAME, CL.LAST_NAME, CL.BIRTHDAY, CL.COUNTRY_OF_BIRTH,  CL.CITIZENSHIP, CL.SEX, 
   FLOOR(DATEDIFF(DD,CL.BIRTHDAY,GETDATE())/365) AGE, FLOOR(DATEDIFF(DD,CL.BIRTHDAY,RP.START_DATE)/365) AGE_AT_SAILING, CL.EMAIL,
   RH. SOURCE_CODE, CL.CLIENT_TYPE
      
FROM SEAWARE.RES_PACKAGE RP INNER JOIN SEAWARE.PACKAGE_DEFINITION PD ON PD.PACKAGE_ID=RP.PACKAGE_ID 
     INNER JOIN SEAWARE.SAIL_HEADER SH ON SH.SAIL_ID =  PD.SAIL_ID
	 INNER JOIN SEAWARE.RES_GUEST RG ON RG.GUEST_ID = RP.GUEST_ID
	 LEFT OUTER JOIN SEAWARE.CLIENT CL ON CL.CLIENT_ID = RG.CLIENT_ID
	 INNER JOIN SEAWARE.RES_HEADER RH ON RH.RES_ID = RP.RES_ID
	 INNER JOIN SEAWARE.AGENCY AG ON AG.AGENCY_ID = RH.SEC_AGENCY_ID
	 LEFT OUTER JOIN SEAWARE.COUNTRY CO ON CO.COUNTRY_CODE2 = AG.COUNTRY_CODE
	 LEFT OUTER JOIN SEAWARE.AGENT AGT ON AGT.AGENT_ID = RH.SEC_AGENT_ID
	 LEFT OUTER JOIN SEAWARE.SHIP_BRAND BR ON BR.SHIP_CODE = RP.SHIP_CODE
  WHERE RP.PACKAGE_CLASS = 'VOYAGE' AND @YESTERDAY >= RES_INIT_DATE
        AND YEAR(PD.VACATION_DATE) >= 2018;


--****************************************************************************
-- Obtain package count for each guest
--****************************************************************************
WITH PK (RES_ID, GUEST_ID, PK_COUNT) AS
(
   SELECT RES_ID, GUEST_ID, COUNT(*) PK_COUNT
      FROM BSR.BOOKING_GUEST_SEGMENT_TODAY 
	  GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
 SET PACKAGE_COUNT = PK_COUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN PK ON PK.RES_ID = BGS.RES_ID AND PK.GUEST_ID = BGS.GUEST_ID;

--*****************************************************************************
-- Assign a package sequence for each guest/package order by package start date
--*****************************************************************************
WITH PK (PACKAGE_SEQ, RES_ID, GUEST_ID, PACKAGE_ID) AS
(
  SELECT 
    ROW_NUMBER() OVER(PARTITION BY RES_ID, GUEST_ID ORDER BY RES_ID, GUEST_ID, START_DATE) AS PACKAGE_SEQ,
    RES_ID, GUEST_ID, PACKAGE_ID
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY  
)
UPDATE BGS
  SET PACKAGE_SEQ = PK.PACKAGE_SEQ
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN PK ON PK.RES_ID=BGS.RES_ID AND PK.GUEST_ID=BGS.GUEST_ID AND PK.PACKAGE_ID = BGS.PACKAGE_ID;

-- 8/3/2020. Obtain Main Package Code:
UPDATE  BST
   SET MAIN_PACKAGE_CODE = PD.MAIN_PACKAGE_CODE
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BST INNER JOIN SEAWARE.PACKAGE_DEFINITION PD
ON PD.PACKAGE_ID = BST.PACKAGE_ID;


--***********************
-- Retrieve amounts:
--***********************
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY
   SET INVOICE_TOTAL   = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('INVOICE',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
       CRUISE_FARES    = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('CRUISE_FARE',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
	   PORT_CHARGES    = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('PORT CHARGES',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
	   INSURANCE       = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('INSURANCE',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),	   
	   SINGLE_SUPPL    = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('SINGLE SUPPL',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),	   	   
	   TRANSFER        = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('TRANSFER',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),	  
	   -- LAND_PROGRAM    = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('LANDPROGRAM',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS), WRONG PACKAGE_ID ITS-29478
	   OB_DISC         = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('ONBOARD',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
	   CS_DISC         = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('ZAHARA SOCIETY',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
	   B2B_DISC        = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('BACK TO BACK',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
	   COMBO_DISC      = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('COMBO',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
	   FP_DISC         = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('FULL PAYMENT',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
	   CNE             = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('CRUISE NIGHT',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS),
	   BNS             = [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('BOOK NOW',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS);

UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY
	   SET INSURANCE       = INSURANCE + [BSR].[BOOKING_GUEST_PACKAGE_AMOUNT] ('TRIP PROTECTION',RES_ID, GUEST_ID,PACKAGE_ID, RES_STATUS);

-- ************************************************
-- HOTEL:
-- ************************************************
-- OF, BK, WL, TM
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_ITEM WHERE INVOICE_ITEM_TYPE = 'HOTEL FARE'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET HOTEL_FARE = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- CX, CL:
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_CANC WHERE INVOICE_ITEM_TYPE = 'HOTEL FARE'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET HOTEL_FARE = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- ************************************************
-- LAND PROGRAM:
-- ************************************************
-- OF, BK, WL, TM
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_ITEM WHERE INVOICE_ITEM_TYPE = 'LANDPROGRAM'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET LAND_PROGRAM = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- CX, CL:
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_CANC WHERE INVOICE_ITEM_TYPE = 'LANDPROGRAM'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET LAND_PROGRAM = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- ************************************************
-- AIR:
-- ************************************************
-- OF, BK, WL, TM
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_ITEM WHERE INVOICE_ITEM_TYPE = 'AIR'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- CX, CL:
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_CANC WHERE INVOICE_ITEM_TYPE = 'AIR'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- ************************************************
-- AIR CUSTOM FEE:
-- ************************************************
-- OF, BK, WL, TM
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_ITEM WHERE INVOICE_ITEM_TYPE = 'AIR CUSTOM FEE'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR_CUSTOM_FEE = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- CX, CL:
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_CANC WHERE INVOICE_ITEM_TYPE = 'AIR CUSTOM FEE'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR_CUSTOM_FEE = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

 -- ************************************************
-- AIR SUPPLEMENT:
-- ************************************************

 -- OF, BK, WL, TM
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_ITEM WHERE INVOICE_ITEM_TYPE = 'AIR SUPPLEMENT'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR = AIR + AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- CX, CL:
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_CANC WHERE INVOICE_ITEM_TYPE = 'AIR SUPPLEMENT'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR = AIR + AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;


-- ************************************************
-- AIR_CREDIT
-- ************************************************
-- OF, BK, WL, TM
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_ITEM WHERE INVOICE_ITEM_TYPE = 'AIR CREDIT'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR_CREDIT = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- CX, CL:
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_CANC WHERE INVOICE_ITEM_TYPE = 'AIR CREDIT'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR_CREDIT = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- ************************************************
-- AIR MARK UP:
-- ************************************************
-- OF, BK, WL, TM
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_ITEM WHERE INVOICE_ITEM_TYPE = 'AIR MARK UP'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR_MARK_UP = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- CX, CL:
WITH AC (RES_ID, GUEST_ID, AMOUNT) AS
( 
   SELECT RES_ID, GUEST_ID, SUM(ISNULL(AMOUNT,0.00) ) AMOUNT
   FROM   SEAWARE.RES_INVOICE_CANC WHERE INVOICE_ITEM_TYPE = 'AIR MARK UP'
   GROUP BY RES_ID, GUEST_ID
)
UPDATE BGS
  SET AIR_MARK_UP = AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN AC ON AC.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = AC.GUEST_ID AND BGS.PACKAGE_SEQ =1
 WHERE BGS.PACKAGE_SEQ =1;

-- ************************************************
-- COUPONS:
-- ************************************************
-- OF, BK, WL, TM
;WITH COUPON AS (
SELECT I.RES_ID, I.GUEST_ID, P.PACKAGE_ID, SUM(AMOUNT) AMOUNT
FROM SEAWARE.RES_PACKAGE P INNER JOIN SEAWARE.RES_INVOICE_ITEM I
ON I.RES_ID = P.RES_ID AND I.RES_PACKAGE_ID = P.RES_PACKAGE_ID
WHERE I.PRICE_AREA = 'COUPON'
GROUP BY I.RES_ID, I.GUEST_ID, P.PACKAGE_ID
)
UPDATE BGS
  SET COUPONS = C.AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN COUPON C
 ON C.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = C.GUEST_ID AND  C.PACKAGE_ID = BGS.PACKAGE_ID;

-- CX, CL:
;WITH COUPON AS (
SELECT I.RES_ID, I.GUEST_ID, P.PACKAGE_ID, SUM(AMOUNT) AMOUNT
FROM SEAWARE.RES_PACKAGE P INNER JOIN SEAWARE.RES_INVOICE_CANC I
ON I.RES_ID = P.RES_ID AND I.RES_PACKAGE_ID = P.RES_PACKAGE_ID
WHERE I.PRICE_AREA = 'COUPON'
GROUP BY I.RES_ID, I.GUEST_ID, P.PACKAGE_ID
)
UPDATE BGS
  SET COUPONS = C.AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN COUPON C
 ON C.RES_ID = BGS.RES_ID AND BGS.GUEST_ID = C.GUEST_ID AND  C.PACKAGE_ID = BGS.PACKAGE_ID;

-- ************************************************
-- Revenue Adjustments (initially for CORONAVIRUS):
-- ************************************************
WITH BK_TOTALS (RES_ID, GUEST_ID, PACKAGE_ID,  AMOUNT) AS
(
   SELECT II.RES_ID, II.GUEST_ID, RP.PACKAGE_ID, ISNULL(SUM(AMOUNT),0.00) AMOUNT
   FROM SEAWARE.RES_INVOICE_ITEM II INNER JOIN SEAWARE.RES_PACKAGE RP ON II.RES_PACKAGE_ID = RP.RES_PACKAGE_ID
   --WHERE PRICE_AREA='COUPON' AND EXTENDED_INFO='FCC 100% CORONAVIRUS'
   WHERE PRICE_AREA='COUPON' AND EXTENDED_INFO IN (SELECT COUPON_CLASS FROM SEAWARE.ACC_COUPON_CLASS WHERE COUPON_CLASS_CODE = 'REV')
   GROUP BY  II.RES_ID, II.GUEST_ID , RP.PACKAGE_ID 
)
UPDATE BT
SET REV_ADJUST = (-1) * T.AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BT INNER JOIN BK_TOTALS T ON BT.RES_ID = T.RES_ID AND BT.GUEST_ID = T.GUEST_ID  AND BT.PACKAGE_ID = T.PACKAGE_ID;


-- *********************************************************************************************
-- Promos and Discounts:
-- *********************************************************************************************
WITH BK_TOTALS (RES_ID, GUEST_ID, PACKAGE_ID, AMOUNT) AS
(
   SELECT II.RES_ID, II.GUEST_ID, RP.PACKAGE_ID, ISNULL(SUM(AMOUNT),0.00) AMOUNT   
   FROM SEAWARE.RES_INVOICE_ITEM II INNER JOIN SEAWARE.RES_PACKAGE RP ON II.RES_PACKAGE_ID = RP.RES_PACKAGE_ID 
      WHERE INVOICE_ITEM_TYPE NOT IN ('FUTURE DEPOSIT', 'GIFT ORDERS', 'HOTEL FARE', 'INSURANCE', 'PORT CHARGES','BROCHURE RATE','CRUISE FARE','AIR','TRANSFER')
            AND AMOUNT < 0.00 
   GROUP BY  II.RES_ID, II.GUEST_ID, RP.PACKAGE_ID
   UNION -- cancellations:
   SELECT II.RES_ID, II.GUEST_ID, RP.PACKAGE_ID, ISNULL(SUM(AMOUNT),0.00) AMOUNT   
   FROM SEAWARE.RES_INVOICE_CANC II INNER JOIN SEAWARE.RES_PACKAGE RP ON II.RES_PACKAGE_ID = RP.RES_PACKAGE_ID 
     WHERE INVOICE_ITEM_TYPE NOT IN ('FUTURE DEPOSIT', 'GIFT ORDERS', 'HOTEL FARE', 'INSURANCE', 'PORT CHARGES','BROCHURE RATE','CRUISE FARE','AIR','TRANSFER')
         AND AMOUNT < 0.00 
   GROUP BY  II.RES_ID, II.GUEST_ID, RP.PACKAGE_ID
)
UPDATE BK
   SET PROMOS_DISC = ISNULL(AMOUNT,0.00)
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BK LEFT OUTER JOIN BK_TOTALS T ON T.RES_ID=BK.RES_ID  AND BK.GUEST_ID = T.GUEST_ID AND BK.PACKAGE_ID = T.PACKAGE_ID;


-- *********************************************************************************************
-- ONBOARD CREDITS
-- Requires table BSR.BOOKING_GUEST_PACKAGE_OBC
-- *********************************************************************************************
WITH OBC (RES_ID, GUEST_ID, PACKAGE_ID, AMOUNT) AS
(
   SELECT RES_ID, GUEST_ID, PACKAGE_ID, SUM(AMOUNT) 
   FROM BSR.BOOKING_GUEST_PACKAGE_OBC
   GROUP BY RES_ID, GUEST_ID, PACKAGE_ID
)
UPDATE BGT
 SET ONBOARD_CREDITS = OBC.AMOUNT
 FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGT INNER JOIN OBC
 ON OBC.RES_ID = BGT.RES_ID AND OBC.GUEST_ID = BGT.GUEST_ID AND OBC.PACKAGE_ID = BGT.PACKAGE_ID;

  
-- ******************************************************************************************
-- COMMISSIONS:
-- 1. Package ID exists:
-- ******************************************************************************************
WITH PK (RES_ID, GUEST_ID, PACKAGE_ID, AMOUNT) AS (
   SELECT CD.RES_ID, CD.GUEST_ID, RP.PACKAGE_ID, SUM(ISNULL(AMOUNT,0.00))  AMOUNT   
   FROM SEAWARE.RES_COMMISSION_DETAIL CD 
   INNER JOIN SEAWARE.RES_PACKAGE RP ON RP.RES_PACKAGE_ID=CD.RES_PACKAGE_ID
   WHERE  NOT (COMMISS_SOURCE LIKE 'GSA, BOOKING%' AND COMMISS_CODE='OVERRIDE')
   GROUP BY CD.RES_ID, CD.GUEST_ID, RP.PACKAGE_ID 
)
UPDATE BGS
   SET COMMISSION = PK.AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN PK ON PK.RES_ID = BGS.RES_ID AND PK.GUEST_ID = BGS.GUEST_ID AND PK.PACKAGE_ID = BGS.PACKAGE_ID AND PK.PACKAGE_ID IS NOT NULL
WHERE PK.PACKAGE_ID IS NOT NULL;

-- ******************************************************************************************
-- COMMISSIONS:
-- 2. Package ID does not exist (usually an ADDON). First package is used.
-- ******************************************************************************************
WITH PK (RES_ID, GUEST_ID, PACKAGE_ID, AMOUNT) AS (
   SELECT CD.RES_ID, CD.GUEST_ID, RP.PACKAGE_ID, SUM(ISNULL(AMOUNT,0.00))  AMOUNT   
   FROM SEAWARE.RES_COMMISSION_DETAIL CD 
   INNER JOIN SEAWARE.RES_PACKAGE RP ON RP.RES_PACKAGE_ID=CD.RES_PACKAGE_ID
   WHERE  NOT (COMMISS_SOURCE LIKE 'GSA, BOOKING%' AND COMMISS_CODE='OVERRIDE')
   GROUP BY CD.RES_ID, CD.GUEST_ID, RP.PACKAGE_ID 
)
UPDATE BGS
   SET COMMISSION = COMMISSION + PK.AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN PK ON PK.RES_ID = BGS.RES_ID AND PK.GUEST_ID = BGS.GUEST_ID 
     AND BGS.PACKAGE_SEQ = 1 AND PK.PACKAGE_ID IS NULL -- Goes to first package
WHERE PK.PACKAGE_ID IS NULL;
   
-- ******************************************************************************************
-- COMMISSIONS:
-- 3. Manual adjustments. Guest ID exists, Package ID does not exist (usually an ADDON). 
--    First package is used.
-- ******************************************************************************************
WITH PK (RES_ID, GUEST_ID, AMOUNT) AS
(
   SELECT CD.RES_ID, CD.GUEST_ID, SUM(ISNULL(AMOUNT, 0.00)) AMOUNT
   FROM SEAWARE.RES_COMMISSION_DETAIL CD    
   WHERE CD.RES_PACKAGE_ID IS NULL AND IS_MANUAL_ADJUSTMENT = 'Y'   
   GROUP BY RES_ID, GUEST_ID  
)
UPDATE BGS
   SET COMMISSION = COMMISSION + PK.AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN PK ON PK.RES_ID = BGS.RES_ID AND PK.GUEST_ID = BGS.GUEST_ID AND PK.GUEST_ID IS NOT NULL
     AND BGS.PACKAGE_SEQ = 1  -- Goes to first package
WHERE PK.GUEST_ID IS NOT NULL;

-- ******************************************************************************************
-- COMMISSIONS:
-- 4. Manual adjustments. Guest ID does NOT exist; Package ID does not exist (usually an ADDON). 
--    First Guest and First package is used.
-- ******************************************************************************************
WITH PK (RES_ID, GUEST_ID, AMOUNT) AS
(
   SELECT CD.RES_ID, CD.GUEST_ID, SUM(ISNULL(AMOUNT, 0.00)) AMOUNT
   FROM SEAWARE.RES_COMMISSION_DETAIL CD    
   WHERE CD.RES_PACKAGE_ID IS NULL AND IS_MANUAL_ADJUSTMENT = 'Y'   
   GROUP BY RES_ID, GUEST_ID  
)
UPDATE BGS
   SET COMMISSION = COMMISSION + PK.AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN PK ON PK.RES_ID = BGS.RES_ID AND PK.GUEST_ID IS NULL
     AND BGS.PACKAGE_SEQ = 1  AND BGS.GUEST_SEQN = 1 -- Goes to first package of first guest
WHERE PK.GUEST_ID IS  NULL;

-- *************************************************
-- 5. COMMISSION FROM OTHER CHARGES: (Booking level)
-- Apply to first package of first guest
-- *************************************************
WITH COMCHARGES (RES_ID, AMOUNT) AS
( 
-- SELECT CC. ENTITY_ID RES_ID, SUM(CC.AMOUNT_IN_HDR_CURR) AMOUNT    --------- 5/11/2021 ITS-26075 Monica Rosetti found data bug
SELECT CC. ENTITY_ID RES_ID, SUM(CC.AMOUNT) AMOUNT
     FROM SEAWARE.RES_CHARGE_COMMISSION CC
	 WHERE CC.ENTITY_TYPE='RES' -- COMMISS_SOURCE <> 'PROTECTED' AND   8/3/2020 After talking to Laz Hernandez & Monica Rossetti's request
	 GROUP BY CC.ENTITY_ID
)
UPDATE BT
    SET COMMISSION  = COMMISSION + ISNULL(C.AMOUNT,0.00)
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BT INNER JOIN COMCHARGES C ON C.RES_ID = BT.RES_ID AND BT.GUEST_SEQN = 1 AND BT.PACKAGE_SEQ = 1
WHERE BT.GUEST_SEQN = 1 AND BT.PACKAGE_SEQ = 1;

-- ********************************************************************************************************************
-- COMMISSIONS:
-- 6. Package ID does not exist on table BSR.BOOKING_GUEST_SEGMENT_TODAY because PACKAGE CLASS = AIR, LAND, HOTEL, ETC. 
--    and only PACKAGE CLASS = VOYAGE is loaded at the beginning, but PACKAGE_ID does exist on RES_PACKAGE. 
--    First package is used. ITS-29481. 10/27/2021.
-- ********************************************************************************************************************
WITH PK (RES_ID, GUEST_ID, AMOUNT) AS (
   SELECT CD.RES_ID, CD.GUEST_ID, SUM(ISNULL(AMOUNT,0.00))  AMOUNT   
   FROM SEAWARE.RES_COMMISSION_DETAIL CD 
   INNER JOIN SEAWARE.RES_PACKAGE RP ON RP.RES_PACKAGE_ID=CD.RES_PACKAGE_ID
   WHERE  RP.PACKAGE_CLASS <> 'VOYAGE' AND RP.PACKAGE_ID IS NOT NULL
   GROUP BY CD.RES_ID, CD.GUEST_ID, RP.PACKAGE_ID 
)
 UPDATE BGS
   SET COMMISSION = COMMISSION + PK.AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN PK ON PK.RES_ID = BGS.RES_ID AND PK.GUEST_ID = BGS.GUEST_ID 
WHERE BGS.PACKAGE_SEQ = 1;

-- ****************************************************************************************
-- OTHER CHARGES: At Booking Level
-- Applied to first package of first guest
-- ****************************************************************************************
UPDATE BT
    SET OTHER_CHARGES = BT.OTHER_CHARGES
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN BSR.BOOKING_TOTALS_TODAY BT ON BT.RES_ID = BGS.RES_ID AND BGS.GUEST_SEQN =1 AND BGS.PACKAGE_SEQ =1
WHERE BGS.GUEST_SEQN = 1 AND BGS.PACKAGE_SEQ =1;


--******************************************************************************************
-- AMOUNT PAID - BOOKING TOTAL / BOOKING LEVEL
--******************************************************************************************

-- AMOUNT PAID (INS minus OUTS):
WITH AMT_PAID_IN (RES_ID, AMOUNT) AS
(
   SELECT CAST(DEST_ENTITY_ID AS INT) RES_ID, ISNULL(SUM(AMOUNT_FULL_TRANS * (CASE WHEN CURRENCY_TRANS = 'USD' THEN 1.000 ELSE RATE_PRICEBASE END)),0.00)
   FROM SEAWARE.ACC_TRANS_DETAIL
   WHERE  DEST_ENTITY_TYPE = 'RES' AND TRANS_STATUS='OK'
   GROUP BY  DEST_ENTITY_ID
),
AMT_PAID_OUT (RES_ID, AMOUNT) AS
(
   SELECT CAST(SOURCE_ENTITY_ID AS INT) RES_ID, ISNULL(SUM(AMOUNT_FULL_TRANS * (CASE WHEN CURRENCY_TRANS = 'USD' THEN 1.000 ELSE RATE_PRICEBASE END)),0.00)
   FROM SEAWARE.ACC_TRANS_DETAIL
   WHERE  SOURCE_ENTITY_TYPE = 'RES' AND TRANS_STATUS='OK'  AND TRANS_TYPE <> 'COMMISSION' 
   GROUP BY  SOURCE_ENTITY_ID
)
UPDATE BK
   SET BOOKING_PAID = ISNULL(I.AMOUNT,0.00) - ISNULL(O.AMOUNT,0.00)
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BK 
LEFT OUTER JOIN AMT_PAID_IN I ON I.RES_ID=BK.RES_ID
LEFT OUTER JOIN AMT_PAID_OUT O ON O.RES_ID=BK.RES_ID
WHERE PACKAGE_SEQ = 1;

-- AMOUNT PAID ORIGINAL CURRENCY (INS minus OUTS):
WITH AMT_PAID_IN (RES_ID, AMOUNT) AS
(
   SELECT CAST(DEST_ENTITY_ID AS INT) RES_ID, ISNULL(SUM(AMOUNT_FULL_TRANS),0.00)
   FROM SEAWARE.ACC_TRANS_DETAIL
   WHERE  DEST_ENTITY_TYPE = 'RES' AND TRANS_STATUS='OK'
   GROUP BY  DEST_ENTITY_ID
),
AMT_PAID_OUT (RES_ID, AMOUNT) AS
(
   SELECT CAST(SOURCE_ENTITY_ID AS INT) RES_ID, ISNULL(SUM(AMOUNT_FULL_TRANS),0.00)
   FROM SEAWARE.ACC_TRANS_DETAIL
   WHERE  SOURCE_ENTITY_TYPE = 'RES' AND TRANS_STATUS='OK'  AND TRANS_TYPE <> 'COMMISSION' 
   GROUP BY  SOURCE_ENTITY_ID
)
UPDATE BK
   SET BOOKING_PAID_ORIG_CUR = ISNULL(I.AMOUNT,0.00) - ISNULL(O.AMOUNT,0.00)
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BK 
LEFT OUTER JOIN AMT_PAID_IN I ON I.RES_ID=BK.RES_ID
LEFT OUTER JOIN AMT_PAID_OUT O ON O.RES_ID=BK.RES_ID
WHERE PACKAGE_SEQ = 1;

--******************************************************************************************
-- GUEST AMOUNT PAID - GUEST LEVEL
--******************************************************************************************
-- US DOLLARS
WITH AMT_PAID_IN (RES_ID, CLIENT_ID,  AMOUNT) AS
(
   SELECT CAST(DEST_ENTITY_ID AS INT) RES_ID, CAST(SOURCE_ENTITY_ID AS INT) CLIENT_ID,
   ISNULL(SUM(AMOUNT_FULL_TRANS * (CASE WHEN CURRENCY_TRANS = 'USD' THEN 1.000 ELSE RATE_PRICEBASE END)),0.00)
   FROM SEAWARE.ACC_TRANS_DETAIL
   WHERE  DEST_ENTITY_TYPE = 'RES' AND TRANS_STATUS='OK' AND SOURCE_ENTITY_TYPE IN ('CLNT','CLNTBNK')  
   GROUP BY  DEST_ENTITY_ID , SOURCE_ENTITY_ID
),
AMT_PAID_OUT (RES_ID,  CLIENT_ID,  AMOUNT) AS
(
   SELECT CAST(SOURCE_ENTITY_ID AS INT) RES_ID, CAST(DEST_ENTITY_ID AS INT) CLIENT_ID,
   ISNULL(SUM(AMOUNT_FULL_TRANS * (CASE WHEN CURRENCY_TRANS = 'USD' THEN 1.000 ELSE RATE_PRICEBASE END)),0.00)
   FROM SEAWARE.ACC_TRANS_DETAIL  
   WHERE SOURCE_ENTITY_TYPE = 'RES'AND TRANS_STATUS='OK' AND TRANS_TYPE <> 'COMMISSION'  AND DEST_ENTITY_TYPE IN ('CLNT', 'CLNTBNK') 
   GROUP BY  SOURCE_ENTITY_ID , DEST_ENTITY_ID
)
UPDATE BK
   SET GUEST_PAID = ISNULL(I.AMOUNT,0.00) - ISNULL(O.AMOUNT,0.00)
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BK 
LEFT OUTER JOIN AMT_PAID_IN I ON I.RES_ID=BK.RES_ID AND I.CLIENT_ID = BK.CLIENT_ID
LEFT OUTER JOIN AMT_PAID_OUT O ON O.RES_ID=BK.RES_ID AND O.CLIENT_ID = BK.CLIENT_ID
WHERE PACKAGE_SEQ = 1;

-- ORIGINAL CURRENCY:
WITH AMT_PAID_IN (RES_ID, CLIENT_ID,  AMOUNT) AS
(
   SELECT CAST(DEST_ENTITY_ID AS INT) RES_ID, CAST(SOURCE_ENTITY_ID AS INT) CLIENT_ID,
   ISNULL(SUM(AMOUNT_FULL_TRANS),0.00)
   FROM SEAWARE.ACC_TRANS_DETAIL
   WHERE  DEST_ENTITY_TYPE = 'RES' AND TRANS_STATUS='OK' AND SOURCE_ENTITY_TYPE IN ('CLNT','CLNTBNK')  
   GROUP BY  DEST_ENTITY_ID , SOURCE_ENTITY_ID
),
AMT_PAID_OUT (RES_ID,  CLIENT_ID,  AMOUNT) AS
(
   SELECT CAST(SOURCE_ENTITY_ID AS INT) RES_ID, CAST(DEST_ENTITY_ID AS INT) CLIENT_ID,
   ISNULL(SUM(AMOUNT_FULL_TRANS),0.00)
   FROM SEAWARE.ACC_TRANS_DETAIL  
   WHERE SOURCE_ENTITY_TYPE = 'RES'AND TRANS_STATUS='OK' AND TRANS_TYPE <> 'COMMISSION'  AND DEST_ENTITY_TYPE IN ('CLNT', 'CLNTBNK') 
   GROUP BY  SOURCE_ENTITY_ID , DEST_ENTITY_ID
)
UPDATE BK
   SET GUEST_PAID_ORIG_CUR = ISNULL(I.AMOUNT,0.00) - ISNULL(O.AMOUNT,0.00)
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BK 
LEFT OUTER JOIN AMT_PAID_IN I ON I.RES_ID=BK.RES_ID AND I.CLIENT_ID = BK.CLIENT_ID
LEFT OUTER JOIN AMT_PAID_OUT O ON O.RES_ID=BK.RES_ID AND O.CLIENT_ID = BK.CLIENT_ID
WHERE PACKAGE_SEQ = 1;

--********************************************************************************************************
-- AMOUNT PAIDS THAT DON'T INCLUDE THE CLIENT_ID WILL BE APPLIED TO THE FIRST GUEST
--********************************************************************************************************
-- US DOLLARS:
WITH GPAID (RES_ID, AMOUNT) AS (
SELECT RES_ID, SUM(ISNULL(GUEST_PAID,0.00)) AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY WHERE PACKAGE_SEQ = 1 GROUP BY RES_ID
)
UPDATE BGS
   SET GUEST_PAID = GUEST_PAID + (BOOKING_PAID - GPAID.AMOUNT)
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN GPAID ON GPAID.RES_ID = BGS.RES_ID
   WHERE GUEST_SEQN = 1 AND PACKAGE_SEQ = 1;

-- ORIGINAL CURRENCY:
WITH GPAID (RES_ID, AMOUNT) AS (
SELECT RES_ID, SUM(ISNULL(GUEST_PAID_ORIG_CUR,0.00)) AMOUNT
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY WHERE PACKAGE_SEQ = 1 GROUP BY RES_ID
)
UPDATE BGS
   SET GUEST_PAID_ORIG_CUR = GUEST_PAID_ORIG_CUR + (BOOKING_PAID - GPAID.AMOUNT)
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN GPAID ON GPAID.RES_ID = BGS.RES_ID
   WHERE GUEST_SEQN = 1 AND PACKAGE_SEQ = 1;

-- *****************************
-- Rate of Exchange Conversion:
-- *****************************
UPDATE BGS
   SET CURRENCY_RATE = H.CURRENCY_RATE, 
       CURRENCY_CODE = H.CURRENCY_CODE
   FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN SEAWARE.RES_HEADER H
        ON H.RES_ID= BGS.RES_ID;

UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY
   SET INVOICE_TOTAL     = INVOICE_TOTAL * CURRENCY_RATE,       
       [CRUISE_FARES]    = [CRUISE_FARES] * CURRENCY_RATE,
       [PORT_CHARGES]    = [PORT_CHARGES] * CURRENCY_RATE,
       [INSURANCE]       = [INSURANCE] * CURRENCY_RATE,
       [SINGLE_SUPPL]    = [SINGLE_SUPPL] * CURRENCY_RATE,
       [PROMOS_DISC]     = [PROMOS_DISC] * CURRENCY_RATE,
       [OTHER_CHARGES]   = [OTHER_CHARGES] * CURRENCY_RATE,       
       [SHOREX]          = [SHOREX] * CURRENCY_RATE,
       [COMMISSION]      = [COMMISSION] * CURRENCY_RATE,	   
	   AIR               = AIR *CURRENCY_RATE,
	   AIR_CREDIT        = AIR_CREDIT * CURRENCY_RATE,
	   AIR_MARK_UP       = AIR_MARK_UP * CURRENCY_RATE,
	   [AIRCRUISE_TAXES] = [AIRCRUISE_TAXES] * CURRENCY_RATE,
	   TRANSFER          = TRANSFER * CURRENCY_RATE,
	   HOTEL_FARE        = HOTEL_FARE * CURRENCY_RATE,
	   LAND_PROGRAM      = LAND_PROGRAM * CURRENCY_RATE,
	   OB_DISC           = OB_DISC * CURRENCY_RATE,
	   CS_DISC           = CS_DISC * CURRENCY_RATE,
       B2B_DISC          = B2B_DISC * CURRENCY_RATE,
       COMBO_DISC        = COMBO_DISC * CURRENCY_RATE,
       FP_DISC           = FP_DISC * CURRENCY_RATE,
	   CNE               = CNE * CURRENCY_RATE,
       BNS               = BNS * CURRENCY_RATE,
	   REV_ADJUST        = REV_ADJUST  * CURRENCY_RATE, 
	   AIR_CUSTOM_FEE    = AIR_CUSTOM_FEE  * CURRENCY_RATE,
	   COUPONS           = COUPONS  * CURRENCY_RATE 
	   ;


--- ********************************
--- **** REVENUE CALCULATIONS
--- ********************************
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY SET NET_TICKET = CRUISE_FARES - ONBOARD_CREDITS + AIR_CREDIT + REV_ADJUST;
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY SET SCRev      = CRUISE_FARES + REV_ADJUST; 
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY SET BCRev      = SCRev - ONBOARD_CREDITS ; 
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY SET NCR        = BCRev - COMMISSION;	  


-- ************************************************
-- ADDITIONAL FIELDS
-- ************************************************

-- Sail Start/End Date:
UPDATE BGS
   SET SAIL_START_DATE = SH.SAIL_DATE_FROM,
       SAIL_END_DATE = SH.SAIL_DATE_TO
FROM  BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN SEAWARE.PACKAGE_DEFINITION PD ON PD.PACKAGE_ID = BGS.PACKAGE_ID
      INNER JOIN SEAWARE.SAIL_HEADER SH ON SH.SAIL_ID = PD.SAIL_ID;

-- Voyage Year, Month & Nights:
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY
   SET VOYAGE_YEAR    = YEAR(SAIL_START_DATE),
       VOYAGE_MONTH   = MONTH(SAIL_START_DATE),
	   VOYAGE_QUARTER = CEILING(CAST(MONTH(SAIL_START_DATE) AS FLOAT)/3.0),
	   VOYAGE_NIGHTS  = DATEDIFF(DD,SAIL_START_DATE, SAIL_END_DATE) + DBO.IDL_DAYS(SHIP_CODE, SAIL_START_DATE, SAIL_END_DATE), -- Voyage level (sail_start/end_date per 8/19/2020 meeting with Revenue Dept)
	   DAYS_SEGMENT   = DATEDIFF(DD,START_DATE, END_DATE) + DBO.IDL_DAYS(SHIP_CODE, START_DATE, END_DATE); -- At guest level

--- TOTAL DAYS,  RATIO:
WITH TBL (GUEST_ID, DAYS_TOTAL) AS (
SELECT GUEST_ID, SUM(DAYS_SEGMENT) FROM  BSR.BOOKING_GUEST_SEGMENT_TODAY
       GROUP BY GUEST_ID
)
UPDATE BGS
  SET DAYS_TOTAL = TBL.DAYS_TOTAL
FROM  BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN TBL ON TBL.GUEST_ID = BGS.GUEST_ID;
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY SET RATIO =  CAST(DAYS_SEGMENT AS FLOAT)/ CAST(DAYS_TOTAL AS FLOAT) WHERE DAYS_TOTAL > 0;

-- GUEST ADDRESS:
UPDATE BGS
   SET CLIENT_CITY    = HA.ADDRESS_CITY,
       CLIENT_STATE   = HA.STATE_CODE,
	   CLIENT_COUNTRY = HA.COUNTRY_CODE
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN SEAWARE.HOUSEHOLD_ADDRESS HA
ON HA.HOUSEHOLD_ID = BGS.HOUSEHOLD_ID AND ADDRESS_TYPE='PRIMARY' AND SEQ_NUMBER=1
WHERE HA.ADDRESS_TYPE='PRIMARY' AND HA.SEQ_NUMBER=1

UPDATE BGS
   SET CLIENT_CITY    = HA.ADDRESS_CITY,
       CLIENT_STATE   = HA.STATE_CODE,
	   CLIENT_COUNTRY = HA.COUNTRY_CODE
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN SEAWARE.HOUSEHOLD_ADDRESS HA
ON HA.HOUSEHOLD_ID = BGS.HOUSEHOLD_ID AND ADDRESS_TYPE='PRIMARY' AND SEQ_NUMBER IS NULL
WHERE HA.ADDRESS_TYPE='PRIMARY' AND HA.SEQ_NUMBER IS NULL AND (CLIENT_CITY IS NULL AND CLIENT_STATE IS NULL);

UPDATE BGS
   SET CLIENT_CITY    = HA.ADDRESS_CITY,
       CLIENT_STATE   = HA.STATE_CODE,
	   CLIENT_COUNTRY = HA.COUNTRY_CODE
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN SEAWARE.HOUSEHOLD_ADDRESS HA
ON HA.HOUSEHOLD_ID = BGS.HOUSEHOLD_ID AND ADDRESS_TYPE='PRIMARY' AND SEQ_NUMBER = 2
WHERE HA.ADDRESS_TYPE='PRIMARY' AND HA.SEQ_NUMBER = 2 AND (CLIENT_CITY IS NULL AND CLIENT_STATE IS NULL);

---Cabin Category, Price Category, Cabin Number:
;WITH CABIN (RES_ID, PACKAGE_ID, CABIN_CATEGORY, PRICE_CATEGORY, CABIN_NBR) AS
(SELECT RP.RES_ID, RP.PACKAGE_ID, AL.CABIN_CATEGORY, AL.PRICE_CATEGORY, AL.CABIN_NUMBER
FROM SEAWARE.RES_PACKAGE RP INNER JOIN SEAWARE.RES_SHIP_REQUEST SR
ON SR.RES_ID=RP.RES_ID AND SR.GUEST_ID=RP.GUEST_ID AND SR.ARR_REF_ID = RP.ARR_REF_ID AND SR.DEP_REF_ID = RP.DEP_REF_ID
INNER JOIN SEAWARE.SHIP_INVENTORY_ALLOC AL ON AL.ALLOCATION_ID = SR.ALLOCATION_ID
WHERE PACKAGE_CLASS='VOYAGE'
GROUP BY RP.RES_ID, RP.PACKAGE_ID, AL.CABIN_CATEGORY, AL. PRICE_CATEGORY, AL.CABIN_NUMBER
)
UPDATE BS
       --SET CABIN_CATEGORY=C.CABIN_CATEGORY, PRICE_CATEGORY=C.PRICE_CATEGORY, CABIN_NBR=C.CABIN_NBR
	   SET PRICE_CATEGORY=C.PRICE_CATEGORY, CABIN_NBR=C.CABIN_NBR
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BS INNER JOIN CABIN C
ON C.RES_ID=BS.RES_ID AND C.PACKAGE_ID=BS.PACKAGE_ID;


-- 8/19/2020. per meeting with XXXXXXX:
UPDATE BS
    SET CABIN_CATEGORY=C.CABIN_CATEGORY
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY BS INNER JOIN  SEAWARE.SHIP_CABIN_CTG_LINK C
ON C.SHIP_CODE = BS.SHIP_CODE AND C.CABIN_NUMBER = BS.CABIN_NBR
AND SAIL_START_DATE BETWEEN EFF_SAIL_FROM AND EFF_SAIL_TO;

-- CABIN = GTY
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY SET  CABIN_NBR = 'GTY' WHERE CABIN_NBR IS NULL AND RES_STATUS IN ('OF','BK','TM');

-- RES_CONTACT:
UPDATE BGS
   SET RES_CONTACT = CL.FULL_NAME 
FROM  BSR.BOOKING_GUEST_SEGMENT_TODAY BGS INNER JOIN  SEAWARE.RES_HEADER RH 
   ON RH.RES_ID = BGS.RES_ID
   INNER JOIN SEAWARE.CLIENT CL
   ON CL.CLIENT_ID = RH.CONTACT_ID;

-- ======================================================================
-- Compute ZAHARA SOCIETY status (CS_STATUS field)
-- ======================================================================

-- Calculate first voyage & date:
UPDATE B
  SET FIRST_VOYAGE = FV.FIRST_VOYAGE,  FIRST_VOYAGE_DATE = FV.FIRST_VOYAGE_DATE, FIRST_VOYAGE_END_DATE = FV.FIRST_VOYAGE_END_DATE
FROM BSR.BOOKING_GUEST_SEGMENT_TODAY B
CROSS APPLY dbo.FirstVoyage (B.CLIENT_ID) FV 
WHERE FV.CLIENT_ID = B.CLIENT_ID AND B.CLIENT_ID IS NOT NULL;

-- ZAHARA Society = NEW GUEST for voyages with dates equal to first voyage and prior (CX) and NON REVENUE.
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY
   SET CS_STATUS ='NEW GUEST'
WHERE START_DATE <= FIRST_VOYAGE_DATE AND CLIENT_ID IS NOT NULL; --AND CS_STATUS <> 'NON REVENUE';

-- ZAHARA Society = ZAHARA SOCIETY for voyages with dates greater than first voyage and NON REVENUE.
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY
   SET CS_STATUS ='ZAHARA SOCIETY'
WHERE START_DATE > FIRST_VOYAGE_DATE AND CLIENT_ID IS NOT NULL; -- AND CS_STATUS <> 'NON REVENUE';

-- Clients with no First Voyage & Date are the result of having a first and only booking that was cancelled. Set to 'NEW GUEST'
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY
   SET CS_STATUS ='NEW GUEST', FIRST_VOYAGE = PACKAGE_CODE, FIRST_VOYAGE_DATE = START_DATE, FIRST_VOYAGE_END_DATE = END_DATE
WHERE FIRST_VOYAGE IS NULL AND FIRST_VOYAGE_DATE IS NULL AND RES_STATUS IN ('CX','CT');

-- 6/10/2021. Per meeting with Scott Kibota, Vincent Sanchez, Scott Appleby and Paul Gomez.
-- Future voyages with first voyage in the future:
UPDATE BSR.BOOKING_GUEST_SEGMENT_TODAY
   SET CS_STATUS ='NEW GUEST'
   WHERE FIRST_VOYAGE_DATE > GETDATE(); 

---------------------------------------------------------------------------------------------
-- Store data on historical table
---------------------------------------------------------------------------------------------
DECLARE @PDATE DATE;
SET @PDATE = CAST(DATEADD(DD,-1,GETDATE()) AS DATE)
INSERT INTO BSR.BOOKING_GUEST_SEGMENT_HISTORY
SELECT @PDATE,* FROM BSR.BOOKING_GUEST_SEGMENT_TODAY;

--SELECT TOP 1000 * FROM BSR.BOOKING_GUEST_SEGMENT_TODAY WHERE CABIN_CATEGORY_BERTH  IS NOT NULL

-- *** THE END ****

